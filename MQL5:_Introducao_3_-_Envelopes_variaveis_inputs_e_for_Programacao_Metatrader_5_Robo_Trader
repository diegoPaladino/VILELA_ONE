//+------------------------------------------------------------------+
//|                                            teste190220200458.mq5 |
//|                                                    diegoPaladino |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright "diegoPaladino"
#property link      "https://www.mql5.com"
#property version   "1.00"
#property indicator_chart_window
#property indicator_buffers 2
#property indicator_plots   2
//--- plot Superior
#property indicator_label1  "Superior"
#property indicator_type1   DRAW_LINE
#property indicator_color1  clrBlue
#property indicator_style1  STYLE_SOLID
#property indicator_width1  1
//--- plot Inferior
#property indicator_label2  "Inferior"
#property indicator_type2   DRAW_LINE
#property indicator_color2  clrRed
#property indicator_style2  STYLE_SOLID
#property indicator_width2  1
//--- indicator buffers
double         SuperiorBuffer[];
double         InferiorBuffer[];
//+------------------------------------------------------------------+
//| Custom indicator initialization function                         |
//+------------------------------------------------------------------+
int OnInit()
  {
//--- indicator buffers mapping
   SetIndexBuffer(0,SuperiorBuffer,INDICATOR_DATA);
   SetIndexBuffer(1,InferiorBuffer,INDICATOR_DATA);
   
//---
   return(INIT_SUCCEEDED);
  }
//+------------------------------------------------------------------+
//| Custom indicator iteration function                              |
//+------------------------------------------------------------------+
int OnCalculate(const int rates_total,
                const int prev_calculated,
                const datetime &time[],
                const double &open[],
                const double &high[],
                const double &low[],
                const double &close[],
                const long &tick_volume[],
                const long &volume[],
                const int &spread[])
  {
//---

  int periodos = 14;
  double desvio = 0.1;

   for(int i=periodos-1; i<rates_total; i++)
     {
      SuperiorBuffer[i]=(close[i]+close[i-1]+close[i-2]+close[i-3]+close[i-4]+close[i-5]+close[i-6]+close[i-7]+close[i-8]+close[i-9]+close[i-10]+close[i-11]+close[i-12]+close[i-13])/periodos*(1+desvio/100);
      InferiorBuffer[i]=(close[i]+close[i-1]+close[i-2]+close[i-3]+close[i-4]+close[i-5]+close[i-6]+close[i-7]+close[i-8]+close[i-9]+close[i-10]+close[i-11]+close[i-12]+close[i-13])/periodos*(1-desvio/100);
     }
//--- return value of prev_calculated for next call
   return(rates_total);
  }
//+------------------------------------------------------------------+
